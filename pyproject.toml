############## build ##############

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.custom]
dependencies = ["datamodel-code-generator"]

[tool.hatch.version]
source = "vcs"

############## metadata ##############

[project]
name = "my-schema-project"
description = "a pydantic based project generated from jsonschema"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
authors = [{ name = "tonyfast", email = "tony.fast@gmail.com" }]
dependencies = ["pydantic"]
dynamic = ["version"]

############## env ##############

[tool.hatch.envs.test]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-html",
  "hypothesis",
  "hypothesis-jsonschema"
]

[tool.hatch.envs.docs]
dependencies = [
  "sphinx",
  "sphinx-jsonschema",
  "myst-parser"
]

############## scripts ##############

[tool.hatch.envs.test.scripts]
cov = """pytest \
-s \
--hypothesis-verbosity=verbose \
--cov-report=term-missing \
--cov-config=pyproject.toml \
--cov=my_schema_project \
--cov-report html \
--cov-report annotate \
--html=pytest.html \
--self-contained-html"""
no-cov = "cov --no-cov"

[tool.hatch.envs.docs.scripts]
html = "sphinx-build . _build/html"
clean = "rm -rf _build"

############## coverage ##############

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/my_schema_project/_version.py"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

############## misc ##############

[tool.hatch.build.hooks.vcs]
version-file = "src/my_schema_project/_version.py"

[project.urls]
Documentation = "https://github.com/tonyfast/my-schema-project#readme"
Issues = "https://github.com/tonyfast/my-schema-project/issues"
Source = "https://github.com/tonyfast/my-schema-project"
